import java.security.NoSuchAlgorithmException;
import java.security.NoSuchProviderException;
import java.sql.*;

/**
 * Created by ppranjal on 3/25/2016.
 */
public class DatabaseConnection {

    Statement stmt;
    Connection conn;
    ResultSet rs;
    private static DatabaseConnection connection;
    public static String TABLE_NAME = "Authentication";

    public static DatabaseConnection getInstance() {
        if (connection == null)
            connection = new DatabaseConnection();
        return connection;
    }

    public void connect() {
        try {
            Class.forName("org.sqlite.JDBC");
            String dbURL = "jdbc:sqlite:userlogin.db";
            conn = DriverManager.getConnection(dbURL);
            if (conn != null) {
                System.out.println("Connected to the database");
                DatabaseMetaData dm = conn.getMetaData();
                System.out.println("Driver name: " + dm.getDriverName());
                System.out.println("Driver version: " + dm.getDriverVersion());
                System.out.println("Product name: " + dm.getDatabaseProductName());
                System.out.println("Product version: " + dm.getDatabaseProductVersion());
                if(!exists(dm,"android_metadata"))
                    createAndroidTable();
                if(!exists(dm,TABLE_NAME))
                    createTable();

            }
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
        } catch (SQLException ex) {
            ex.printStackTrace();
        } finally {
            try {
                rs.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    public boolean exists(DatabaseMetaData dm,String table) throws SQLException {
        rs = dm.getTables(null, null, table, new String[]{"TABLE"});
        if (rs.next()) {
            System.out.println(rs.getString("TABLE_NAME"));
            return true;
    }
        return false;
    }

    public void createAndroidTable() {
        String sql = "CREATE TABLE \"android_metadata\" (\"locale\" TEXT DEFAULT 'en_US')";
        String insert = "INSERT INTO \"android_metadata\" VALUES ('en_US')";
        try {
            stmt = conn.createStatement();
            stmt.executeUpdate(sql);
            System.out.println("Android table created");
            stmt.executeUpdate(insert);
            System.out.println("Android data inserted");
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                stmt.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }

    }

    public void createTable() {
        String sql = "CREATE TABLE " + TABLE_NAME + "(" +
                "_id INTEGER PRIMARY KEY AUTOINCREMENT," +
                "username TEXT NOT NULL, password TEXT NOT NULL, email TEXT UNIQUE NOT NULL);";
        try {
            stmt = conn.createStatement();
            int i = stmt.executeUpdate(sql);

        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                stmt.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }

    }

    public void insertData(String name, String password, String email) throws NoSuchProviderException, NoSuchAlgorithmException {
        String securePwd = HashPassword.generateSecurePassword(password);
        if (securePwd == null) {
            System.out.println("Secure password couldn't be generated");
            throw new NoSuchAlgorithmException();
        }
        String sql = "INSERT INTO " + TABLE_NAME + " (username,password,email) VALUES(\"" + name + "\",\"" + securePwd + "\",\"" + email + "\");";
        try {
            stmt = conn.createStatement();
            int i = stmt.executeUpdate(sql);
            System.out.println("Inserted:" + i);

        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                stmt.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    public void close() {
        try {
            conn.close();
            stmt.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }

    }
}
